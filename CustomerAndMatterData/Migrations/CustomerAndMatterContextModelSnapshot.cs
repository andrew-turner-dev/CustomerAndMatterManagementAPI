// <auto-generated />
using CustomerAndMatterData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomerAndMatterData.Migrations
{
    [DbContext(typeof(CustomerAndMatterContext))]
    partial class CustomerAndMatterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerAndMatterData.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<long>("LawyerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LawyerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "customer1@customer1.com",
                            LawyerId = 1L,
                            Name = "Customer1",
                            PhoneNumber = "1-111-111-1111"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "customer12@customer12.com",
                            LawyerId = 2L,
                            Name = "Customer2",
                            PhoneNumber = "2-222-222-2222"
                        });
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Lawyer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Firm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LoginEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lawyers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Firm = "Firm1",
                            FirstName = "Harvey",
                            IsAdmin = true,
                            LastName = "Dent",
                            LoginEmail = "harvey.dent@cityofgotham.com",
                            Password = "two-faced"
                        },
                        new
                        {
                            Id = 2L,
                            Firm = "Firm2",
                            FirstName = "Saul",
                            IsAdmin = false,
                            LastName = "Goodman",
                            LoginEmail = "agoodman@goodlaw.com",
                            Password = "callMe"
                        });
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Matter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<long>("LawyerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LawyerId");

                    b.ToTable("Matters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CustomerId = 1L,
                            Description = "Case 1 description",
                            IsClosed = false,
                            LawyerId = 1L,
                            Name = "Name of Case 1"
                        },
                        new
                        {
                            Id = 2L,
                            CustomerId = 2L,
                            Description = "Case 2 description",
                            IsClosed = false,
                            LawyerId = 2L,
                            Name = "Name of Case 2"
                        });
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Customer", b =>
                {
                    b.HasOne("CustomerAndMatterData.Models.Lawyer", null)
                        .WithMany("Customers")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Matter", b =>
                {
                    b.HasOne("CustomerAndMatterData.Models.Customer", "Customer")
                        .WithMany("Matters")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomerAndMatterData.Models.Lawyer", "Lawyer")
                        .WithMany("Matters")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Lawyer");
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Customer", b =>
                {
                    b.Navigation("Matters");
                });

            modelBuilder.Entity("CustomerAndMatterData.Models.Lawyer", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Matters");
                });
#pragma warning restore 612, 618
        }
    }
}
